import math
import numpy
import ctypes

def quad(corner1, corner2, normal):
    c1 = numpy.array(corner1)
    c2 = numpy.array(corner2)
    tangent = c2 - c1
    bitangent = numpy.cross(normal, tangent)
    c3 = c2 + (bitangent - tangent) * 0.5
    c4 = c1 + (tangent - bitangent) * 0.5
    triangles = (0, 1, 2,
                 0, 3, 1)
    vertices = list(c1) + list(c2) + list(c3) + list(c4)
    n = list(normal / numpy.dot(normal, normal))
    normals = n * 4
    i = c4 - c1
    i = i / math.sqrt(numpy.dot(i, i))
    j = c3 - c1
    j = j / math.sqrt(numpy.dot(j, j))
    texcoords = (0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)
    tangents = (i[0], i[1], i[2],
                i[0], i[1], i[2],
                i[0], i[1], i[2],
                i[0], i[1], i[2])
    return (triangles, vertices, normals, texcoords, tangents)

def appendobj(orig, obj):
    return (orig[0] + tuple(map(lambda x: x + len(orig[1]) / 3, obj[0])),
            orig[1] + obj[1],
            orig[2] + obj[2],
            orig[3] + obj[3],
            orig[4] + obj[4])

def box(size):
    obj = quad((-size, size, size), (size, -size, size), (0.0, 0.0, 1.0))
    obj = appendobj(obj, quad((size, size, -size), (-size, -size, -size),
                              (0.0, 0.0, -1.0)))
    obj = appendobj(obj, quad((-size, size, -size), (size, size, size),
                              (0.0, 1.0, 0.0)))
    obj = appendobj(obj, quad((-size, -size, size), (size, -size, -size),
                              (0.0, -1.0, 0.0)))
    obj = appendobj(obj, quad((size, size, size), (size, -size, -size),
                              (1.0, 0.0, 0.0)))
    obj = appendobj(obj, quad((-size, size, -size), (-size, -size, size),
                              (-1.0, 0.0, 0.0)))
    return obj

def pyopengl_arrayfix(obj):
    arr_type = ctypes.c_double * len(obj[4])
    tangents = arr_type(0.0)
    for i in range(len(obj[4])):
        tangents[i] = obj[4][i]
    return (obj[0], obj[1], obj[2], obj[3], tangents)

boxShape = box(10.0)
print("triangles")
print(boxShape[0])
print("vertices")
print(boxShape[1])
print("normals")
print(boxShape[2])
print("texcoords")
print(boxShape[3])
print("tangents")
print(boxShape[4])